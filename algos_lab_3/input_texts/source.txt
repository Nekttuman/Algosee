introduction
in the olden days of teletype terminals terminals were away from computers and were connected to them
through serial cables the terminals could be configured by sending a series of bytes all the capabilities
such as moving the cursor to a new location erasing part of the screen scrolling the screen changing modes
etc of terminals could be accessed through these series of bytes these control seeuqnces are usually called
escape sequences because they start with an escapexb character even today with proper emulation we
can send escape sequences to the emulator and achieve the same effect on a terminal window
suppose you wanted to print a line in color try typing this on your console
echo min color
the first character is an escape character which looks like two characters and to be able to print it you
have to press ctrlv and then the esc key all the others are normal printable characters you should be
able to see the string in color in red it stays that way and to revert back to the original mode type this
echo m
now what do these magic characters mean difficult to comprehend they might even be different for
different terminals so the designers of unix invented a mechanism named termcap it is a file that lists all
the capabilities of a particular terminal along with the escape sequences needed to achieve a particular effect
in the later years this was replaced by terminfo without delving too much into details this mechanism
allows application programs to query the terminfo database and obtain the control characters to be sent to a
terminal or terminal emulator what is ncurses
you might be wondering what the import of all this technical gibberish is in the above scenario every
application program is supposed to query the terminfo and perform the necessary stuff sending control
characters etc it soon became difficult to manage this complexity and this gave birth to curses curses is
a pun on the name cursor optimization the curses library forms a wrapper over working with raw terminal
codes and provides highly flexible and efficient api application programming interface it provides
functions to move the cursor create windows produce colors play with mouse etc the application programs
need not worry about the underlying terminal capabilities
so what is ncurses ncurses is a clone of the original system v release svr curses it is a freely
distributable library fully compatible with older version of curses in short it is a library of functions that
manages an applications display on charactercell terminals in the remainder of the document the terms
curses and ncurses are used interchangeably
a detailed history of ncurses can be found in the news file from the source distribution the current
package is maintained by thomas dickey you can contact the maintainers at bugncursesgnuorg what we can do with ncurses
ncurses not only creates a wrapper over terminal capabilities but also gives a robust framework to create
nice looking ui user interfaces in text mode it provides functions to create windows etc its sister libraries
panel menu and form provide an extension to the basic curses library these libraries usually come along
with curses one can create applications that contain multiple windows menus panels and forms windows introduction
can be managed independently can provide scrollability and even can be hidden
menus provide the user with an easy command selection option forms allow the creation of easytouse data
entry and display windows panels extend the capabilities of ncurses to deal with overlapping and stacked
windows
these are just some of the basic things we can do with ncurses as we move along we will see all the
capabilities of these librarieswhere to get it
all right now that you know what you can do with ncurses you must be rearing to get started ncurses is
usually shipped with your installation in case you dont have the library or want to compile it on your own
read o
